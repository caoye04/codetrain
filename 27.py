# # Prime
# **时间限制：** 0.2 秒
# **空间限制：** 512 MB
# ## 题目描述
# 输入一个正整数 $x$，请你在 $x$ 后面添加若干位数字（不能不添加；添加的部分不得以数字 0 开头），使得结果为质数，在这个前提下所得的结果应尽量小。
# ## 输入格式
# 从标准输入读入数据。
# 输入一行，输入一个正整数 $x$ 。
# ## 输出格式
# 输出到标准输出。
# 输出一行，包含一个整数，表示所得的结果。
# 输入保证 $1 \le x \le 100$ 。
# 本题共有 100 个测试点，每个测试点 1 分。

def isPrime(num):
    if num < 2:
        return False
    if num == 2:
        return True
    if num % 2 == 0:
        return False
    import math
    for i in range(3, int(math.sqrt(num)) + 1, 2):
        if num % i == 0:
            return False
    return True

def get_result(num):
    num = str(num)
    n = 1
    while True:
        tmp = int(num+str(n))
        if isPrime(tmp):
            return tmp
        else:
            n += 1

def get_100list():
    list_100 = list()
    for i in range(1,101):
        list_100.append(get_result(i))
    print(list_100)
    return list_100

list_100 = [11, 23, 31, 41, 53, 61, 71, 83, 97, 101, 113, 127, 131, 149, 151, 163, 173, 181, 191, 2011, 211, 223, 233, 241, 251, 263, 271, 281, 293, 307, 311, 3217, 331, 347, 353, 367, 373, 383, 397, 401, 419, 421, 431, 443, 457, 461, 479, 487, 491, 503, 5113, 521, 5323, 541, 557, 563, 571, 587, 593, 601, 613, 6211, 631, 641, 653, 661, 673, 683, 691, 701, 719, 727, 733, 743, 751, 761, 773, 787, 797, 809, 811, 821, 839, 8419, 853, 863, 877, 881, 8923, 907, 911, 929, 937, 941, 953, 967, 971, 983, 991, 1009]
n = int(input())
print(list_100[n-1])